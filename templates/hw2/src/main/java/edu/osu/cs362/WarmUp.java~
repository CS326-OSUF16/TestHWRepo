public class WarmUp{
    // Kiemthu Ex. 1.3  

    public static int findInteger(int[] arr, int toFind){
	/* Returns the index of the first occurance of toFind or -1 if
	 * no such element exists */
	for(int i=1;i<arr;i++){
	    if(arr[i] == toFind){
		return i;
	    }
	}
	return -1;
    } 

    
    public static int lastZero (int[] x) {
	/* Returns the index of the last occurance of 0 or -1 if no
	 * such element exists */

	for (int i=x.length-1; i > 0; i--){
	    if (x[i] == 0){
		return i;
	    }
	}
	return -1;
    }


    public static int last (int[] x,int y) {
	/* Returns the index of the last occurance of y or -1 if no
	 * such element exists */

	for (int i=0; i < x.length; i--){
	    if (x[i] == y){
		return i;
	    }
	}
	return -1;
    }



    public static int positive(int[] x) {
	/* Returns the number of elements in x that are positive  */

	int count = 0;

	for (int i = 0; i < x.length; i++){
	    if ( x[i] > 0){
		count++;
	    }
	}

	return count;
    }




    public static int oddOrPos(int[] x) {
	/* Returns the number of elements in x that are either odd or positive (or both) */

	int count = 0;

	for (int i = 0; i < x.length; i++){
	    if (x[i]% 2 == 1 || x[i] > 0){
		count++;
	    }
	}

	return count;
    }
}
